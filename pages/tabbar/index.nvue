<template>
	<view class="myp-bg-inverse">
		<view class="ti-head">
			<image src="/static/imgs/house.jpg" mode="aspectFill" class="ti-head-bg"></image>
		</view>
		<!-- #ifdef APP-NVUE -->
		<list class="ti-scroll" :id="mypListId" :bounce="true" isSwiperList="true" :style="'width:750rpx;'+mypContentHeightStyle" @scroll="handleParentScroll">
			<cell>
				<view style="height: 510rpx;width: 750rpx;"></view>
			</cell>
			<cell>
				<view class="ti-radius">
					<view class="ti-radius-top"></view>
					<view class="ti-radius-body"></view>
					<view class="ti-radius-icon">
						<myp-icon name="bookmark" type="text" size="ll"></myp-icon>
					</view>
				</view>
			</cell>
			<cell>
				<tabbar-list ref="tabbar-list" :parentId="mypListId" @page="toTabbar"></tabbar-list>
			</cell>
		</list>
		<!-- #endif -->
		<!-- #ifndef APP-NVUE -->
		<scroll-view class="ti-scroll" :scroll-y="mypParentScrollable" :scroll-top="mypParentScrollTop" :scroll-with-animation="true" :style="'width:750rpx;'+mypContentHeightStyle" @scroll="handleParentScroll">
			<view style="height: 510rpx;width: 750rpx;"></view>
			<view class="ti-radius">
				<view class="ti-radius-top"></view>
				<view class="ti-radius-body"></view>
				<view class="ti-radius-icon">
					<myp-icon name="bookmark" type="text" size="ll"></myp-icon>
				</view>
			</view>
			<tabbar-list :scrollable="mypChildScrollable" @move="mypChildTouchMove" @end="mypChildTouchEnd" @page="toTabbar"></tabbar-list>
		</scroll-view>
		<!-- #endif -->
		<myp-navbar :lefts="leftIcons" :fixed="true" :isSeize="false" bgType="none" itemIconType="inverse" @leftAction="navLeftAction"></myp-navbar>
	</view>
</template>

<script>
	import tabbarList from './components/tabbarList.vue'
	
	import navHelper from '@/router/navHelper.js'
	import parentMixin from '@/mypUI/myp-list/header/pureHeaderParent.js'
	import contentBoxMixin from '@/mypUI/myp-mixin/contentBoxMixin.js'
	import {getStatusBarHeight, getNavBarHeight} from '@/mypUI/utils/system.js'
	export default {
		components: {
			tabbarList
		},
		mixins: [navHelper, contentBoxMixin, parentMixin],
		data() {
			return {
				mypExtra: '0'
			}
		},
		onReady() {
			setTimeout(()=>{
				this.toInitSpecial()
			}, 0)
		},
		methods: {
			handleParentScroll(e) {
				this.mypHandleParentScroll(e)
			},
			toTabbar(val) {
				this.navigateTo(val.name)
			},
			toInitSpecial() {
				this.mypHeaderHeight = uni.upx2px(600)
				this.mypAllHeight = this.mypHeaderHeight - getStatusBarHeight() - getNavBarHeight() - uni.upx2px(90)
				// #ifdef APP-NVUE
				this.mypSetScrollRef(this.$refs['tabbar-list'])
				// #endif
			}
		}
	}
</script>

<style lang="scss">
	
	.ti {
		&-head {
			width: 750rpx;
			height: 600rpx;
			
			&-bg {
				width: 750rpx;
				height: 600rpx;
			}
		}
		&-scroll {
			position: fixed;
			left: 0;
			top: 0;
			width: 750rpx;
		}
		&-radius {
			position: relative;
			width: 750rpx;
			
			&-top {
				background-color: transparent;
				height: 30rpx;
			}
			&-body {
				background-color: #FFFFFF;
				height: 60rpx;
				border-top-left-radius: 60rpx;
				border-top-right-radius: 60rpx;
			}
			&-icon {
				position: absolute;
				right: 60rpx;
				top: 0;
				width: 60rpx;
				height: 60rpx;
				border-radius: 30rpx;
				justify-content: center;
				align-items: center;
				background-color: $myp-text-color-forth;
			}
		}
	}
</style>
